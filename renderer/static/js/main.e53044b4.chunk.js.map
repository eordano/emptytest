{"version":3,"sources":["jslibs/arrayToDictionary.ts","jslibs/identity.ts","kernel/store/position/helpers/parcelsInSight.ts","ui/sections/ParcelsSection.tsx","kernel/renderer/initialize.ts","ui/sections/ScenesSection.tsx","ui/layout/App.tsx","ui/sections/Introduction.tsx","ui/sections/SmartContracts.tsx","ui/sections/User.tsx","ui/sections/CommsSection.tsx","ui/sections/WearablesSection.tsx","ui/sections/MarketplaceSection.tsx","ui/sections/DevelopmnetSection.tsx","index.tsx"],"names":["arrayToDictionary","arr","key","value","result","element","identity","_","squareAndSum","a","b","cachedDeltas","calculateCachedDeltas","limit","squaredRadius","x","y","push","sort","parcelsInSight","position","lineOfSightRadius","length","i","range","from","to","Array","parseOrDefault","defaultValue","isNaN","parsed","parseInt","initializeUnity","container","configurationFilePath","gameInstance","window","UnityLoader","instantiate","future","DCL","EngineStarted","console","log","resolve","UnityInterface","MessageFromEngine","type","jsonEncodedMessage","interfaceToRenderer","delay","ms","Promise","setTimeout","loaderReady","ScenesSection","useEffect","renderer","document","getElementById","style","margin","width","height","id","pages","useState","address","_setAddress","label","onChange","ev","target","setX","setY","props","currentPosition","parcelsInSightDict","lineOfSight","map","reverse","j","inSightStyle","backgroundColor","textAlign","ParcelsSectionView","App","location","setLocation","isFullscreen","leftMenu","className","href","params","url","humanTitle","Tab","active","onClick","Section","ReactDOM","render"],"mappings":"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","file":"static/js/main.e53044b4.chunk.js","sourcesContent":["export function arrayToDictionary<T, R>(arr: T[], key: (e: T) => string, value: (e: T) => R): Record<string, R> {\n  const result: Record<string, R> = {}\n  for (const element of arr) {\n    result[key(element)] = value(element)\n  }\n  return result\n}\n","export function identity<T>(_: T): T {\n  return _\n}\n","import { IVector2 } from '../../../types/IVector2'\n\nexport function squareAndSum(a: number, b: number) {\n  return a * a + b * b\n}\n\nconst cachedDeltas: { [limit: number]: IVector2[] } = {}\n\nfunction calculateCachedDeltas(limit: number) {\n  const squaredRadius = limit * limit\n  for (let x = -limit; x <= limit; x++) {\n    for (let y = -limit; y <= limit; y++) {\n      if (x * x + y * y <= squaredRadius) {\n        cachedDeltas[limit].push({ x, y })\n      }\n    }\n  }\n  cachedDeltas[limit].sort((a, b) => squareAndSum(a.x, a.y) - squareAndSum(b.x, b.y))\n}\n\nexport function parcelsInSight(position: IVector2, lineOfSightRadius = 4): string[] {\n  const result: string[] = []\n  if (!cachedDeltas[lineOfSightRadius]) {\n    cachedDeltas[lineOfSightRadius] = []\n  }\n  let length = cachedDeltas[lineOfSightRadius].length\n  if (!length) {\n    calculateCachedDeltas(lineOfSightRadius)\n    length = cachedDeltas[lineOfSightRadius].length\n  }\n  for (let i = 0; i < length; i++) {\n    result.push(\n      `${position.x + cachedDeltas[lineOfSightRadius][i].x},${position.y + cachedDeltas[lineOfSightRadius][i].y}`\n    )\n  }\n  return result\n}\n","import { Field, Grid, GridColumn, GridRow, Page } from 'decentraland-ui'\nimport React, { useState } from 'react'\nimport { arrayToDictionary } from '../../jslibs/arrayToDictionary'\nimport { identity } from '../../jslibs/identity'\nimport { parcelsInSight } from '../../kernel/store/position/helpers/parcelsInSight'\nimport { IVector2 } from '../../kernel/types/IVector2'\nimport { StringCoordinate } from '../../kernel/types/StringCoordinate'\n\nfunction range(from: number, to: number): number[] {\n  const result = new Array(to - from + 1)\n  for (let i = from; i <= to; i++) {\n    result[i - from] = i\n  }\n  return result\n}\n\nfunction parseOrDefault(x: number | string, defaultValue = 0) {\n  if (typeof x === 'number') {\n    if (isNaN(x)) {\n      return defaultValue\n    }\n    return x\n  }\n  const parsed = parseInt(x, 10)\n  if (isNaN(parsed)) {\n    return defaultValue\n  }\n  return parsed\n}\n\nexport function ParcelsSectionView(props: {\n  currentPosition: IVector2\n  parcelsInSightDict: Record<StringCoordinate, boolean>\n  lineOfSight: number\n  setX: (x: number) => void\n  setY: (y: number) => void\n}) {\n  const { currentPosition, parcelsInSightDict, lineOfSight } = props\n  const setX: (ev: React.ChangeEvent<HTMLInputElement>) => void = (ev: React.ChangeEvent<HTMLInputElement>) =>\n    props.setX(parseOrDefault(((ev as unknown) as { target: { value: string } }).target.value))\n  const setY: (ev: React.ChangeEvent<HTMLInputElement>) => void = (ev: React.ChangeEvent<HTMLInputElement>) =>\n    props.setY(parseOrDefault(((ev as unknown) as { target: { value: string } }).target.value))\n  return (\n    <Page>\n      <h2>Parcels</h2>\n      <Grid>\n        <GridRow>\n          <GridColumn width=\"8\">\n            <Field label=\"X\" value={currentPosition.x} type=\"number\" onChange={setX} />\n          </GridColumn>\n          <GridColumn width=\"8\">\n            <Field label=\"Y\" value={currentPosition.y} type=\"number\" onChange={setY} />\n          </GridColumn>\n        </GridRow>\n        <GridRow>\n          <GridColumn>êê∏</GridColumn>\n          {range(currentPosition.x - lineOfSight - 1, currentPosition.x + lineOfSight + 1).map(i => {\n            return <GridColumn key={i - currentPosition.x}>{i}</GridColumn>\n          })}\n        </GridRow>\n        {range(currentPosition.y - lineOfSight - 1, currentPosition.y + lineOfSight + 1)\n          .reverse()\n          .map(j => {\n            return (\n              <GridRow key={'row-' + (j - currentPosition.y)}>\n                <GridColumn key={'col-' + (j - currentPosition.y)}>{j}</GridColumn>\n                {range(currentPosition.x - lineOfSight - 1, currentPosition.x + lineOfSight + 1).map(i => {\n                  const inSightStyle = parcelsInSightDict[`${i},${j}`]\n                    ? {\n                        backgroundColor: '#ff0000',\n                        textAlign: 'center'\n                      }\n                    : {\n                        backgroundColor: '#000000',\n                        textAlign: 'center'\n                      }\n                  return (\n                    <GridColumn\n                      style={inSightStyle}\n                      key={'cell-' + (i - currentPosition.x) + '-' + (j - currentPosition.y)}\n                    >\n                      {i},{j}\n                    </GridColumn>\n                  )\n                })}\n              </GridRow>\n            )\n          })}\n      </Grid>\n    </Page>\n  )\n}\n\nexport function ParcelsSection() {\n  const [x, setX] = useState(0)\n  const [y, setY] = useState(0)\n  return ParcelsSectionView({\n    currentPosition: { x, y },\n    lineOfSight: 4,\n    parcelsInSightDict: arrayToDictionary(parcelsInSight({ x, y }, 4), identity, () => true),\n    setX,\n    setY\n  })\n}\n","import { future } from 'fp-future'\nimport { UnityInterface } from './kernelToRenderer'\n\ndeclare const window: {\n  UnityLoader: {\n    instantiate(divId: string | HTMLElement, manifest: string): UnityGame\n  }\n  DCL: unknown\n  UnityInterface: unknown\n}\ntype UnityGame = {\n  SendMessage(object: string, method: string, args: number | string): void\n  SetFullscreen(): void\n}\n\nexport async function initializeUnity(container: HTMLElement, configurationFilePath = 'unity/Build/unity.json') {\n  const gameInstance = window.UnityLoader.instantiate(container, configurationFilePath)\n  const result = future<UnityInterface>()\n  window.DCL = {\n    EngineStarted() {\n      console.log(`[engine]: Start signal fired`)\n      result.resolve(window.UnityInterface as UnityInterface)\n    },\n    MessageFromEngine(type: string, jsonEncodedMessage: string) {\n      console.log(`[engine ${type}]: ${jsonEncodedMessage}`)\n    }\n  }\n\n  return {\n    gameInstance,\n    container,\n    interfaceToRenderer: result\n  }\n}\n","import { Page } from 'decentraland-ui'\nimport React, { useEffect } from 'react'\nimport { initializeUnity } from '../../kernel/renderer/initialize'\n\ndeclare const window: LoaderWindow\ntype LoaderWindow = {\n  UnityLoader: {\n    initialize: unknown\n  }\n}\n\nfunction delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nasync function loaderReady() {\n  while (!window.UnityLoader) {\n    await delay(100)\n  }\n  return null\n}\n\nexport function ScenesSection() {\n  useEffect(() => {\n    (async function() {\n      await loaderReady()\n      let renderer = document.getElementById('gameContainer')\n      while (renderer === null) {\n        await delay(100)\n        renderer = document.getElementById('gameContainer')\n      }\n      initializeUnity(renderer)\n    })()\n    return () => undefined\n  })\n  return (\n    <Page>\n      <h2>Scenes</h2>\n      <div style={{ margin: 'auto', width: '960px', height: '600px' }} id=\"gameContainer\"></div>\n    </Page>\n  )\n}\n","import { Container, Footer, Navbar, Tabs } from 'decentraland-ui'\nimport 'decentraland-ui/lib/styles.css'\nimport React, { useState } from 'react'\nimport { CommsSection } from '../sections/CommsSection'\nimport { DevelopmentSection } from '../sections/DevelopmnetSection'\nimport { IntroductionSection } from '../sections/Introduction'\nimport { MarketplaceSection } from '../sections/MarketplaceSection'\nimport { ParcelsSection } from '../sections/ParcelsSection'\nimport { ScenesSection } from '../sections/ScenesSection'\nimport { SmartContracts } from '../sections/SmartContracts'\nimport { UserSection } from '../sections/User'\nimport { WearablesSection } from '../sections/WearablesSection'\nimport './static/index.css'\n\nconst pages: [string, string, () => JSX.Element][] = [\n  ['/', '.', ScenesSection],\n  ['/intro', 'Introduction', IntroductionSection],\n  ['/smartcontracts', 'Smart Contracts', SmartContracts],\n  ['/users', 'Users', UserSection],\n  ['/comms', 'Comms', CommsSection],\n  ['/parcels', 'Parcels', ParcelsSection],\n  ['/scenes', 'Scenes', ScenesSection],\n  ['/wearables', 'Wearables', WearablesSection],\n  ['/market', 'Marketplace', MarketplaceSection],\n  ['/development', 'Development', DevelopmentSection]\n]\n\nexport function App(): JSX.Element {\n  const [location, setLocation] = useState('/')\n  return (\n    <Container>\n      <Navbar\n        isFullscreen\n        leftMenu={[\n          <a className=\"item current\" key=\"current\" href=\"http://localhost:3000/\">\n            Info\n          </a>\n        ]}\n      />\n      <Tabs>\n        {pages.map((params: [string, string, () => JSX.Element]) => {\n          const [url, humanTitle] = params\n          return (\n            <Tabs.Tab key={humanTitle} active={location === url} onClick={() => setLocation(url)}>\n              {humanTitle}\n            </Tabs.Tab>\n          )\n        })}\n      </Tabs>\n      {pages.map((params: [string, string, () => JSX.Element]) => {\n        const [url, , Section] = params\n        if (url === location) {\n          return <Section key={url} />\n        }\n        return <div key={url} />\n      })}\n      <Footer />\n    </Container>\n  )\n}\n","import { Page } from 'decentraland-ui'\nimport React from 'react'\n\nexport function IntroductionSection() {\n  return (\n    <Page>\n      <h2>Introduction</h2>\n      <p>\n        This website is meant to be a playground to test the internals of Decentraland. Each section covers one\n        particular aspect of the virtual experience, unveiling the inner workings of the different aspects of this\n        shared virtual world.\n      </p>\n      <ul>\n        <li>\n          Smart contracts: this section discusses how the smart contract ecosystem is made, and shows some examples on\n          how to query them using web3x, a typescript library for Ethereum.\n        </li>\n      </ul>\n    </Page>\n  )\n}\n","import { Page } from 'decentraland-ui'\nimport React from 'react'\n\nexport function SmartContracts() {\n  return (\n    <Page>\n      <h2>Smart contracts</h2>\n      <p>\n        The first contract we deployed was MANA. The supply of this token can only decrease, through the use of the\n        `burn(amount)` function. It has the standard granularity of 18 decimals, and it‚Äôs deployed at the address\n        0x0f5d2fb29fb7d3cfee444a200298f468908cc942.\n      </p>\n      <p>\n        A few months later, through the Terraform event, we deployed the LAND smart contract. Currently, it has (90601 +\n        1995) parcels. LAND was one of the first ERC721 contracts, and has been one of the top NFTs traded in the\n        Ethereum ecosystem in terms of monetary volume. LAND tokens have an owner, a title and description, and the\n        ability to reference an IPFS hash (although this last one is not currently used). A LAND can have an\n        updateOperator, an address that has the right to deploy content on it. It also can be transferred in and out by\n        an operator.\n      </p>\n      <p>\n        Later on, we realized that single parcels of LAND were too cumbersome to manage as a batch, so we created\n        Estates, a Composable NFT. Estates comprise most of the active LAND today, and have been successfully saving\n        their owners a lot of Ethereum gas fees. Similar to LAND, Estates have a title, description, owner, operator,\n        updateOperator, and updateManager, an address that can change the updateOperator. In order to create an Estate,\n        the LAND gets transferred to the Estate contract and you get an Estate that gives you the right to deploy on\n        that LAND (as well as the ability to transfer it out of the Estate). LAND is an upgradeable contract that uses a\n        non-standard version of the Aragon Proxy contract. It was deployed before Aragon and OpenZeppelin provided\n        standardized contracts to create upgradeable contracts. Estates are also upgradeable, and the upgrade contract\n        used is the standard from OpenZeppelin. The ecosystem of Decentraland‚Äôs smart contracts is not limited to LAND.\n      </p>\n      <p>\n        Users now are able to register an ENS name under `dcl.eth`, controlled through an NFT issued for each name.\n        Because they are NFTs, they can be bought and sold on the marketplace.\n      </p>\n      <p>\n        Additionally, users can have Wearables for their avatars. A Collection contract is an ERC721 token with a given\n        scarcity, a ‚Äúkind‚Äù, a name and a description. The first Collection was a set of limited issuance Masks. Then, we\n        deployed two more collections: Halloween and CyberXmas. And now, in preparation for the launch event, we also\n        issued a set of community-proposed NFTs: Another key part of the ecosystem is the marketplace.{' '}\n      </p>\n      <p>\n        The Market is composed of two main contracts: the Marketplace and the Bids contract. They are owned by ‚ÄúBurner‚Äù\n        contracts (this one and this one), which collect all the fees. Anyone can call the `burn()` function of these\n        contracts, effectively shrinking the supply of MANA available. Currently, the only NFTs traded in the\n        Marketplace are LAND, Estates, Names and the Wearable collections.\n      </p>\n      <p>\n        Who owns all these contracts? Nobody, and everybody. Throughout this month, Decentraland‚Äôs smart contracts will\n        be transferred to an Aragon organization. This organization, the Decentraland DAO (dcl.eth) provides the\n        community the ability to govern, tune and upgrade the smart contracts that support Decentraland. Check out the\n        Decentraland DAO at https://mainnet.aragon.org/#dcl.eth\n      </p>\n    </Page>\n  )\n}\n","import { Field, Page, Segment } from 'decentraland-ui'\nimport React, { useState } from 'react'\n\nexport function UserSection() {\n  const [address, _setAddress] = useState('')\n  const setAddress: (ev: React.ChangeEvent<HTMLInputElement>) => void = (ev: React.ChangeEvent<HTMLInputElement>) =>\n    _setAddress(\n      (ev.target as {\n        value?: string\n      }).value || ''\n    )\n  return (\n    <Page>\n      <h2>Users</h2>\n      <p>A user in Decentraland is identified cryptographically by its main ethereum address.</p>\n      <Segment>\n        <h3>Query a user&rsquo;s profile</h3>\n        <form>\n          <Field label=\"User address\" value={address} type=\"address\" onChange={setAddress} />\n        </form>\n      </Segment>\n    </Page>\n  )\n}\n","import { Page } from 'decentraland-ui'\nimport React from 'react'\n\nexport function CommsSection() {\n  return <Page><h2>Comms</h2></Page>\n}\n","import { Page } from 'decentraland-ui'\nimport React from 'react'\n\nexport function WearablesSection() {\n  return <Page>Wearables</Page>\n}\n","import { Page } from 'decentraland-ui'\nimport React from 'react'\n\nexport function MarketplaceSection() {\n  return <Page>Marketplace</Page>\n}\n","import { Page } from 'decentraland-ui'\nimport React from 'react'\n\nexport function DevelopmentSection() {\n  return <Page>Development</Page>\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './ui/layout/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}